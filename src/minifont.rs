use crate::wasm4;

const FONT: [u8; 288] = [
    0x04, 0xa4, 0xea, 0xc4, 0x44, 0xa0, 0x00, 0x02, 0x04, 0xae, 0xc0, 0xa4, 0x82, 0x44, 0x00, 0x02,
    0x04, 0x04, 0x44, 0xa0, 0x82, 0xee, 0x0e, 0x04, 0x00, 0x0e, 0x60, 0x40, 0x82, 0x44, 0x40, 0x08,
    0x04, 0x04, 0xea, 0xe0, 0x44, 0xa0, 0x80, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x44, 0xee, 0xae, 0xee, 0xee, 0x00, 0x20, 0x8e, 0xac, 0x22, 0xa8, 0x82, 0xaa, 0x44, 0x4e, 0x42,
    0xa4, 0xe6, 0xee, 0xe2, 0xee, 0x00, 0x80, 0x26, 0xa4, 0x82, 0x22, 0xa2, 0xa2, 0x44, 0x4e, 0x40,
    0x4e, 0xee, 0x2e, 0xe2, 0xee, 0x08, 0x20, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xe4, 0xce, 0xce, 0xee, 0xae, 0xea, 0x8a, 0xa4, 0x2a, 0xa8, 0xa8, 0x88, 0xa4, 0x2a, 0x8e, 0xea,
    0xee, 0xc8, 0xac, 0xc8, 0xe4, 0x2c, 0x8a, 0xea, 0xaa, 0xa8, 0xa8, 0x8a, 0xa4, 0xaa, 0x8a, 0xea,
    0xea, 0xce, 0xce, 0x8e, 0xae, 0x4a, 0xea, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc4, 0xc6, 0xea, 0xaa, 0xaa, 0xec, 0x86, 0x40, 0xaa, 0xa8, 0x4a, 0xaa, 0xaa, 0x28, 0x82, 0xa0,
    0xca, 0xce, 0x4a, 0xaa, 0x44, 0x48, 0x42, 0x00, 0x8a, 0xa2, 0x4a, 0xae, 0xa4, 0x88, 0x22, 0x00,
    0x86, 0xac, 0x4e, 0x4e, 0xa4, 0xec, 0x26, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x44, 0xce, 0xce, 0xee, 0xae, 0xea, 0x8a, 0xa4, 0x2a, 0xa8, 0xa8, 0x88, 0xa4, 0x2a, 0x8e, 0xea,
    0x0e, 0xc8, 0xac, 0xc8, 0xe4, 0x2c, 0x8a, 0xea, 0x0a, 0xa8, 0xa8, 0x8a, 0xa4, 0xaa, 0x8a, 0xea,
    0x0a, 0xce, 0xce, 0x8e, 0xae, 0x4a, 0xea, 0xa4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xc4, 0xc6, 0xea, 0xaa, 0xaa, 0xe6, 0x4c, 0x00, 0xaa, 0xa8, 0x4a, 0xaa, 0xaa, 0x24, 0x44, 0x40,
    0xca, 0xce, 0x4a, 0xaa, 0x44, 0x48, 0x42, 0xa0, 0x8a, 0xa2, 0x4a, 0xae, 0xa4, 0x84, 0x44, 0x00,
    0x86, 0xac, 0x4e, 0x4e, 0xa4, 0xe6, 0x4c, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
];
const FONT_WIDTH: u32 = 64;
const CHAR_WIDTH: u32 = 4;
const CHAR_HEIGHT: u32 = 6;

/// Draw some text using the mini font.
pub fn draw(text: String, x: i32, y: i32) {
    let mut offset: i32 = -((text.len() / 2) as i32);

    for character in text.chars() {
        let mut char_index = character as u32;
        if char_index < 32 {
            continue; // skip over all control characters
        }
        char_index -= 32;

        let row = (char_index as f32 / 16.0).floor() as u32;
        let column = char_index % 16;
        let char_offset = offset * (CHAR_WIDTH as i32);

        wasm4::blit_sub(
            &FONT,
            x + char_offset,
            y,
            CHAR_WIDTH,
            CHAR_HEIGHT,
            column * CHAR_WIDTH,
            row * CHAR_HEIGHT,
            FONT_WIDTH,
            wasm4::BLIT_1BPP,
        );

        offset += 1;
    }
}
